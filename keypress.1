.TH KEYPRESS 1 "Sep 9, 2025" "0.3.6" "Keypress Manual"
.SH NAME
keypress \- A program to translate keyboard inputs into byte representations

.SH SYNOPSIS
keypress [\fIOPTION\fR]...

.SH DESCRIPTION
\fBKeypress\fR is a command-line utility for inspecting keyboard input at the byte level and for translating escape sequences into human‑readable key symbols. It helps you understand how your terminal emulator encodes individual keystrokes, function keys and key combinations (including modifiers, extended ASCII and Unicode).

.TP
If running with the \fB-t\fR option, \fBkeypress\fR translates the escape sequence SEQ into the corresponding symbolic representation and immediately exits (useful for decoding recorded escape strings or terminal logs into human‑readable key names). For example:
.TP
 \fBkeypress -t "\\e[1;12D"\fR
.TP
This command will output \fBSuper+Alt+Shift+Left\fR.

.TP
Otherwise, \fBkeypress\fR runs in interactive capture mode. In this mode, each keystroke is printed as one or more output lines; each line corresponds to a single byte in the input sequence and shows multiple numeric encodings plus the symbolic interpretation. Output fields per byte are: hexadecimal, octal, decimal, binary, and the symbolic name (if any).

.TP
Multi‑byte sequences (for example, CSI sequences from function or arrow keys, UTF‑8 characters, or extended ASCII) produce multiple output lines —one per byte— and the full sequence is also shown as a human‑readable key/symbol string.

.TP
When a terminfo capability name can be associated with the pressed keys, it is shown after the human‑readable form. A leading dash (‑) before a capability name indicates the sequence likely differs from the terminfo database entry for that capability.

.SH NOTES AND CAVEATS
Exact byte sequences can vary between terminal emulators, terminal settings (e.g., application vs. normal keypad), keyboard layouts, shell settings, and whether modifier‑encoding extensions (like XTerm’s XTMODKEYS or the Kitty keyboard protocol) are enabled.

.TP
Pasting from the primary clipboard is allowed (useful in case of Unicode characters).

.TP
Within the program, press \fBCtrl+c\fR to quit or \fBCtrl+x\fR to clear the screen. Please note that these key combinations are reserved for controlling the program's flow, so they will not be represented in the output.

.SH RESERVED CONTROL KEY BYTE VALUES
The following reserved control combinations are used to control the program's flow.

.TS
left;
l l l l l.
┌──────┬──────┬─────┬──────────┬──────┐
│ Hex  │ Oct  │ Dec │   Bin    │ Sym  │
├──────┼──────┼─────┼──────────┼──────┤
│ \\x18 │ \\030 │  24 │ 00011000 │  CAN │ (Ctrl+x)
│ \\x03 │ \\003 │   3 │ 00000011 │  ETX │ (Ctrl+c)
└──────┴──────┴─────┴──────────┴──────┘
.TE

.SH OPTIONS
.TP
.B -a
Enable Application Cursor Keys (DECCKM) mode. In this mode, escape sequences for cursor keys are built using SS3 (ESC O) instead of CSI (ESC [) sequences.

.TP
.B -c
Do not clear the screen before displaying key information.

.TP
.B -h
Display the help message and exit.

.TP
.B -i
Use ASCII characters to draw the table.

.TP
.B -I
Do not show terminfo capability names.

.TP
.B -k
Enable the Kitty keyboard protocol (disambiguate mode). Requires Kitty 0.20.0 or later (or a compatible terminal).

.TP
.B -K
Enable the Kitty keyboard protocol (full mode). Requires Kitty 0.20.0 or later (or a compatible terminal).

.TP
.B -l
Use a light color scheme.

.TP
.B -n
Disable colors.

.TP
.B -p
Run in HP keyboard mode. This option affects only key translations. Mostly useful for terminals emulating the HP keyboard (e.g. \fBxterm -kt hp\fR).

.TP
.B -s
Run in SCO keyboard mode. This option affects only key translations. Mostly useful for terminals/consoles using legacy encodings like cons25 or the FreeBSD console, or when the terminal is set to this mode (e.g. \fBxterm -kt sco\fR).

.TP
.B -t \fISEQ\fR
Display the text/symbolic representation for the key sequence SEQ and exit.

.TP
.B -T
Do not show key translations.

.TP
.B -u
Make XTerm emit CSI-u sequences (requires either \fB-x\fR or \fB-X\fR). This option requires XTerm 398 or later.

.TP
.B -v
Display version information and exit.

.TP
.B -x
Enable Xterm's \fBXTMODKEYS\fR (disambiguate mode): report modified printable keys (e.g. \fBAlt+u\fR) as escape sequences. In this mode, \fBmodifyOtherKeys\fR is set to 2. This option requires XTerm 214 or later.

.TP
.B -X
Enable Xterm's \fBXTMODKEYS\fR (full mode): report unmodified printable keys as escape sequences as well. In this mode, \fBmodifyOtherKeys\fR is set to 3, and the following resources to 4: \fBmodifyCursorKeys\fR, \fBmodifyFunctionKeys\fR, \fBmodifyKeypadKeys\fR, and \fBmodifySpecialKeys\fR. This option requires XTerm 398 or later.

.TP
\fBNote\fR: Options \fB-u\fR, \fB-x\fR, and \fB-X\fR are specific to XTerm. Support in other terminals is limited or incomplete.

.SH EXAMPLES
To translate an escape sequence:
.TP
 \fBkeypress -t "\\e[1;12D"\fR
.TP
To run the program in its default mode (interactive):
.TP
 \fBkeypress\fR

.SH AUTHOR
Written by Leo Abramovich.

.SH REPORTING BUGS
Report bugs to <https://github.com/leo-arch/keypress/issues>.

.SH COPYRIGHT
Copyright © 2025 Leo Abramovich.

.SH LICENSE
MIT
